{{ if (include "authelia.enabled.secret" .) -}}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace (include "authelia.name" .)) | default dict -}}
{{- $secretData := $secret.data | default dict -}}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ include "authelia.name" . }}
  labels: {{ include "authelia.labels" (merge (dict "Labels" .Values.secret.labels) .) | nindent 4 }}
  {{- with $annotations := include "authelia.annotations" (merge (dict "Annotations" .Values.secret.annotations) .) }}
  annotations: {{ $annotations | nindent 4 }}
  {{- end }}
data:
    {{- if include "authelia.secret.generate" .Values.configMap.identity_validation.reset_password.secret }}
    {{ include "authelia.secret.path.reset_password.jwt" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.identity_validation.reset_password.secret) .) }}
    {{- end }}
    {{- if include "authelia.secret.generate" .Values.configMap.session.encryption_key }}
    {{ include "authelia.secret.path.session.encryption_key" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.session.encryption_key) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.session.redis.password) .Values.configMap.session.redis.enabled }}
    {{ include "authelia.secret.path.redis.password" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.session.redis.password) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.session.redis.high_availability.password) .Values.configMap.session.redis.high_availability.enabled }}
    {{ include "authelia.secret.path.redis.sentinel.password" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.session.redis.high_availability.password) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.authentication_backend.ldap.password) .Values.configMap.authentication_backend.ldap.enabled }}
    {{ include "authelia.secret.path.ldap.password" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.authentication_backend.ldap.password) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.notifier.smtp.password) .Values.configMap.notifier.smtp.enabled }}
    {{ include "authelia.secret.path.smtp.password" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.notifier.smtp.password) .) }}
    {{- end }}
    {{- if include "authelia.secret.generate" .Values.configMap.storage.encryption_key }}
    {{ include "authelia.secret.path.storage.encryption_key" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.storage.encryption_key) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.storage.postgres.password) .Values.configMap.storage.postgres.enabled }}
    {{ include "authelia.secret.path.postgres.password" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.storage.postgres.password) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.storage.mysql.password) .Values.configMap.storage.mysql.enabled }}
    {{ include "authelia.secret.path.mysql.password" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.storage.mysql.password) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.duo_api.secret) .Values.configMap.duo_api.enabled }}
    {{ include "authelia.secret.path.duo" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.duo_api.secret) .) }}
    {{- end }}
    {{- if and (include "authelia.secret.generate" .Values.configMap.identity_providers.oidc.hmac_secret) .Values.configMap.identity_providers.oidc.enabled }}
    {{ include  "authelia.secret.path.oidc.hmac_key" . }}: {{ include "authelia.secret.value.standard" (merge (dict "Lookup" $secretData "Secret" .Values.configMap.identity_providers.oidc.hmac_secret) .) }}
    {{- end }}
{{- end -}}
