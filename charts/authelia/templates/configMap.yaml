{{- if (include "authelia.generate.configMap" .) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "authelia.name" . }}
  labels: {{ include "authelia.labels" (merge (dict "Labels" .Values.configMap.labels) .) | nindent 4 }}
  {{- with $annotations := include "authelia.annotations" (merge (dict "Annotations" .Values.configMap.annotations) .) }}
  annotations: {{ $annotations | nindent 4 }}
  {{- end }}
data:
  {{ default "configuration.yaml" .Values.configMap.key }}: |
    ---
    {{- if (include "authelia.enabled.certificatesSecret" .) }}
    certificates_directory: /certificates
    {{- end }}
    theme: {{ default "light" .Values.configMap.theme }}
    default_redirection_url: {{ default (printf "https://www.%s" .Values.domain) .Values.configMap.default_redirection_url }}
    {{- if semverCompare ">=4.35.0" (include "authelia.version" .) }}
    default_2fa_method: {{ .Values.configMap.default_2fa_method | default "" | quote }}
    {{- end }}
    server:
      host: 0.0.0.0
      port: {{ default 9091 .Values.configMap.server.port }}
      {{- if not (eq "" (default "" .Values.configMap.server.path)) }}
      path: {{ .Values.configMap.server.path }}
      {{- end }}
      {{- if semverCompare ">=4.33.0" (include "authelia.version" .) }}
      asset_path: {{ .Values.configMap.server.asset_path | default "" | quote }}
      {{- end }}
      {{- if (semverCompare ">=4.34.0" (include "authelia.version" .)) }}
      headers:
        csp_template: {{ .Values.configMap.server.headers.csp_template | default "" | quote }}
      {{- end }}
      read_buffer_size: {{ default 4096 .Values.configMap.server.read_buffer_size }}
      write_buffer_size: {{ default 4096 .Values.configMap.server.write_buffer_size }}
      enable_pprof: {{ .Values.configMap.server.enable_pprof | default false }}
      enable_expvars: {{ .Values.configMap.server.enable_expvars | default false }}
    log:
      level: {{ default "info" .Values.configMap.log.level }}
      format: {{ default "text" .Values.configMap.log.format }}
      file_path: {{ .Values.configMap.log.file_path | default "" | quote }}
      keep_stdout: true
    {{- if and (semverCompare ">=4.36.0" (include "authelia.version" .)) .Values.configMap.telemetry.metrics.enabled }}
    telemetry:
      metrics:
        enabled: {{ .Values.configMap.telemetry.metrics.enabled | default false }}
        address: '0.0.0.0:{{ .Values.configMap.telemetry.metrics.port | default 9959 }}'
    {{- end }}
    totp:
      {{- if semverCompare ">=4.34.0" (include "authelia.version" .) }}
      disable: {{ .Values.configMap.totp.disable | default false }}
      {{- end }}
      issuer: {{ default .Values.domain .Values.configMap.totp.issuer }}
      {{- if semverCompare ">=4.33.0" (include "authelia.version" .) }}
      algorithm: {{ default "sha1" .Values.configMap.totp.algorithm }}
      digits: {{ default 6 .Values.configMap.totp.digits }}
      {{- end }}
      period: {{ default 30 .Values.configMap.totp.period }}
      skew: {{ default 1 .Values.configMap.totp.skew }}
      {{- if semverCompare ">=4.35.0" (include "authelia.version" .) }}
      secret_size: {{ .Values.configMap.totp.secret_size | default 32 }}
      {{- end }}
   {{- if semverCompare ">=4.34.0" (include "authelia.version" .) }}
    webauthn:
      disable: {{ .Values.configMap.webauthn.disable | default false }}
      display_name: {{ .Values.configMap.webauthn.display_name | default "Authelia" }}
      attestation_conveyance_preference: {{ .Values.configMap.webauthn.attestation_conveyance_preference | default "indirect" }}
      user_verification: {{ .Values.configMap.webauthn.user_verification | default "preferred" }}
      timeout: {{ .Values.configMap.webauthn.timeout | default "60s" }}
    {{- end }}
    {{- if semverCompare ">=4.31.0" (include "authelia.version" .) }}
    ntp:
      address: {{ default "time.cloudflare.com:123" .Values.configMap.ntp.address }}
      version: {{ default 3 .Values.configMap.ntp.version }}
      max_desync: {{ default "3s" .Values.configMap.ntp.max_desync }}
      disable_startup_check: {{ default false .Values.configMap.ntp.disable_startup_check }}
      disable_failure: {{ default false .Values.configMap.ntp.disable_failure }}
    {{- end }}
    {{- if include "authelia.configured.duo" . }}
    duo_api:
      hostname: {{ .Values.configMap.duo_api.hostname }}
      integration_key: {{ .Values.configMap.duo_api.integration_key }}
      {{- if semverCompare ">=4.33.0" (include "authelia.version" .) }}
      enable_self_enrollment: {{ .Values.configMap.duo_api.enable_self_enrollment | default false }}
      {{- end }}
    {{- end }}
    {{- with $auth := .Values.configMap.authentication_backend }}
    authentication_backend:
      {{- if semverCompare "<4.36.0" (include "authelia.version" $) }}
      disable_reset_password: {{ include "authelia.config.password_reset.disable" $ }}
      {{- end }}
      {{- if semverCompare ">=4.35.0" (include "authelia.version" $) }}
      password_reset:
        {{- if semverCompare ">=4.36.1" (include "authelia.version" $) }}
        disable: {{ include "authelia.config.password_reset.disable" $ }}
        {{- end }}
        custom_url: {{ $auth.password_reset.custom_url | default "" | quote }}
      {{- end }}
      {{- if $auth.file.enabled }}
      file:
        path: {{ $auth.file.path }}
        password: {{ toYaml $auth.file.password | nindent 10 }}
      {{- end }}
      {{- if $auth.ldap.enabled }}
      ldap:
        implementation: {{ default "custom" $auth.ldap.implementation }}
        url: {{ $auth.ldap.url }}
        timeout: {{ default "5s" $auth.ldap.timeout }}
        start_tls: {{ $auth.ldap.start_tls }}
        tls:
          {{- if hasKey $auth.ldap.tls "server_name" }}
          server_name: {{ default $auth.ldap.host $auth.ldap.tls.server_name }}
          {{- end }}
          minimum_version: {{ default "TLS1.2" $auth.ldap.tls.minimum_version }}
          skip_verify: {{ default false $auth.ldap.tls.skip_verify }}
        {{- if $auth.ldap.base_dn }}
        base_dn: {{ $auth.ldap.base_dn }}
        {{- end }}
        {{- if $auth.ldap.username_attribute }}
        username_attribute: {{ $auth.ldap.username_attribute }}
        {{- end }}
        {{- if $auth.ldap.additional_users_dn }}
        additional_users_dn: {{ $auth.ldap.additional_users_dn }}
        {{- end }}
        {{- if $auth.ldap.users_filter }}
        users_filter: {{ $auth.ldap.users_filter }}
        {{- end }}
        {{- if $auth.ldap.additional_groups_dn }}
        additional_groups_dn: {{ $auth.ldap.additional_groups_dn }}
        {{- end }}
        {{- if $auth.ldap.groups_filter }}
        groups_filter: {{ $auth.ldap.groups_filter }}
        {{- end }}
        {{- if $auth.ldap.group_name_attribute }}
        group_name_attribute: {{ $auth.ldap.group_name_attribute }}
        {{- end }}
        {{- if $auth.ldap.mail_attribute }}
        mail_attribute: {{ $auth.ldap.mail_attribute }}
        {{- end }}
        {{- if $auth.ldap.display_name_attribute }}
        display_name_attribute: {{ $auth.ldap.display_name_attribute }}
        {{- end }}
        {{- if semverCompare ">=4.35.2" (include "authelia.version" $) }}
        permit_referrals: {{ $auth.ldap.permit_referrals }}
        {{- end }}
        {{- if semverCompare ">=4.36.0" (include "authelia.version" $) }}
        permit_unauthenticated_bind: {{ $auth.ldap.permit_unauthenticated_bind }}
        {{- end }}
        user: {{ $auth.ldap.user }}
      {{- end }}
    {{- end }}
    {{- if semverCompare ">=4.35.0" (include "authelia.version" .) }}
    password_policy:
      standard:
        enabled: {{ .Values.configMap.password_policy.standard.enabled }}
        min_length: {{ .Values.configMap.password_policy.standard.min_length }}
        max_length: {{ .Values.configMap.password_policy.standard.max_length }}
        require_uppercase: {{ .Values.configMap.password_policy.standard.require_uppercase }}
        require_lowercase: {{ .Values.configMap.password_policy.standard.require_lowercase }}
        require_number: {{ .Values.configMap.password_policy.standard.require_number }}
        require_special: {{ .Values.configMap.password_policy.standard.require_special }}
      zxcvbn:
        enabled: {{ .Values.configMap.password_policy.zxcvbn.enabled }}
        min_score: {{ .Values.configMap.password_policy.zxcvbn.min_score }}
    {{- end }}
    {{- with $session := .Values.configMap.session }}
    session:
      name: {{ default "authelia_session" $session.name }}
      domain: {{ required "A valid .Values.domain entry required!" $.Values.domain }}
      same_site: {{ default "lax" $session.same_site }}
      expiration: {{ default "1M" $session.expiration }}
      inactivity: {{ default "5m" $session.inactivity }}
      remember_me_duration: {{ default "1M" $session.remember_me_duration }}
      {{- if $session.redis.enabled }}
      redis:
        host: {{ $session.redis.host }}
        port: {{ default 6379 $session.redis.port }}
        {{- if not (eq $session.redis.username "") }}
        username: {{ $session.redis.username }}
        {{- end }}
        maximum_active_connections: {{ default 8 $session.redis.maximum_active_connections }}
        minimum_idle_connections: {{ default 0 $session.redis.minimum_idle_connections }}
        {{- if $session.redis.tls.enabled }}
        tls:
          server_name: {{ $session.redis.tls.server_name }}
          minimum_version: {{ default "TLS1.2" $session.redis.tls.minimum_version }}
          skip_verify: {{ $session.redis.tls.skip_verify }}
        {{- end }}
        {{- if $session.redis.high_availability.enabled }}
        high_availability:
          sentinel_name: {{ $session.redis.high_availability.sentinel_name }}
          {{- if $session.redis.high_availability.nodes }}
          nodes: {{ toYaml $session.redis.high_availability.nodes | nindent 10 }}
          {{- end }}
          {{- if semverCompare ">=4.34.5" (include "authelia.version" $) }}
          sentinel_username: {{ $session.redis.high_availability.username | default "" | quote }}
          {{- end }}
          route_by_latency: {{ $session.redis.high_availability.route_by_latency }}
          route_randomly: {{ $session.redis.high_availability.route_randomly }}
        {{- end }}
      {{- end }}
    {{- end }}
    regulation: {{ toYaml .Values.configMap.regulation | nindent 6 }}
    storage:
      {{- with $storage := .Values.configMap.storage }}
      {{- if $storage.local.enabled }}
      local:
        path: {{ $storage.local.path }}
      {{- end }}
      {{- if $storage.mysql.enabled }}
      mysql:
        host: {{ $storage.mysql.host }}
        port: {{ default 3306 $storage.mysql.port }}
        database: {{ default "authelia" $storage.mysql.database }}
        username: {{ default "authelia" $storage.mysql.username }}
        {{- if semverCompare ">=4.31.0" (include "authelia.version" $) }}
        timeout: {{ default "5s" $storage.mysql.timeout }}
        {{- end }}
      {{- end }}
      {{- if $storage.postgres.enabled }}
      postgres:
        host: {{ $storage.postgres.host }}
        port: {{ default 5432 $storage.postgres.port }}
        database: {{ default "authelia" $storage.postgres.database }}
        {{- if semverCompare ">=4.33.0" (include "authelia.version" $) }}
        schema: {{ default "public" $storage.postgres.schema }}
        {{- end }}
        username: {{ default "authelia" $storage.postgres.username }}
        {{- if semverCompare ">=4.31.0" (include "authelia.version" $) }}
        timeout: {{ default "5s" $storage.postgres.timeout }}
        {{- end }}
        {{- if semverCompare ">=4.33.0" (include "authelia.version" $) }}
        ssl:
          mode: {{ $storage.postgres.ssl.mode | default "disable" | quote }}
          root_certificate: {{ $storage.postgres.ssl.root_certificate | default "" | quote }}
          certificate: {{ $storage.postgres.ssl.certificate | default "" | quote }}
          key: {{ $storage.postgres.ssl.key | default "" | quote }}
        {{- else }}
        sslmode: {{ $storage.postgres.ssl.mode | default "disable" | quote }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- with $notifier := .Values.configMap.notifier }}
    notifier:
      disable_startup_check: {{ $.Values.configMap.notifier.disable_startup_check }}
      {{- if $notifier.filesystem.enabled }}
      filesystem:
        filename: {{ $notifier.filesystem.filename }}
      {{- end }}
      {{- if $notifier.smtp.enabled }}
      smtp:
        host: {{ $notifier.smtp.host }}
        port: {{ default 25 $notifier.smtp.port }}
        {{- if semverCompare ">=4.31.0" (include "authelia.version" $) }}
        timeout: {{ default "5s" $notifier.smtp.timeout }}
        {{- end }}
        username: {{ $notifier.smtp.username }}
        sender: {{ $notifier.smtp.sender }}
        identifier: {{ $notifier.smtp.identifier }}
        subject: {{ $notifier.smtp.subject | quote }}
        startup_check_address: {{ $notifier.smtp.startup_check_address }}
        disable_require_tls: {{ $notifier.smtp.disable_require_tls }}
        disable_html_emails: {{ $notifier.smtp.disable_html_emails }}
        tls:
          server_name: {{ default $notifier.smtp.host $notifier.smtp.tls.server_name }}
          minimum_version: {{ default "TLS1.2" $notifier.smtp.tls.minimum_version }}
          skip_verify: {{ default false $notifier.smtp.tls.skip_verify }}
      {{- end }}
    {{- end }}
    {{- if .Values.configMap.identity_providers.oidc.enabled }}
    identity_providers:
      oidc:
        access_token_lifespan: {{ default "1h" .Values.configMap.identity_providers.oidc.access_token_lifespan }}
        authorize_code_lifespan: {{ default "1m" .Values.configMap.identity_providers.oidc.authorize_code_lifespan }}
        id_token_lifespan: {{ default "1h" .Values.configMap.identity_providers.oidc.id_token_lifespan }}
        refresh_token_lifespan: {{ default "90m" .Values.configMap.identity_providers.oidc.refresh_token_lifespan }}
        {{- if semverCompare ">=4.34.1" (include "authelia.version" .) }}
        enforce_pkce: {{ .Values.configMap.identity_providers.oidc.enforce_pkce | default "public_clients_only" }}
        enable_pkce_plain_challenge: {{ .Values.configMap.identity_providers.oidc.enable_pkce_plain_challenge | default false }}
        {{- end }}
        enable_client_debug_messages: {{ default false .Values.configMap.identity_providers.oidc.enable_client_debug_messages }}
        minimum_parameter_entropy: {{ default 8 .Values.configMap.identity_providers.oidc.minimum_parameter_entropy }}
        {{- if semverCompare ">=4.35.0" (include "authelia.version" $) }}
        cors:
          {{- if .Values.configMap.identity_providers.oidc.cors.endpoints }}
          endpoints: {{ toYaml .Values.configMap.identity_providers.oidc.cors.endpoints | nindent 12 }}
          {{- end }}
          {{- if .Values.configMap.identity_providers.oidc.cors.allowed_origins }}
          allowed_origins: {{ toYaml .Values.configMap.identity_providers.oidc.cors.allowed_origins | nindent 12 }}
          {{- end }}
          allowed_origins_from_client_redirect_uris: {{ .Values.configMap.identity_providers.oidc.cors.allowed_origins_from_client_redirect_uris }}
        {{- end }}
        {{- if .Values.configMap.identity_providers.oidc.clients }}
        clients:
        {{- range $client := .Values.configMap.identity_providers.oidc.clients }}
        - id: {{ $client.id }}
          description: {{ default $client.id $client.description }}
          {{- if not $client.public }}
          secret: {{ default (randAlphaNum 128) $client.secret }}
          {{- end }}
          {{- if semverCompare ">=4.35.0" (include "authelia.version" $) }}
          sector_identifier: {{ $client.sector_identifier | default "" | quote }}
          {{- if $client.pre_configured_consent_duration }}
          pre_configured_consent_duration: {{ $client.pre_configured_consent_duration | quote }}
          {{- end }}
          {{- end }}
          public: {{ $client.public | default false }}
          authorization_policy: {{ default "two_factor" $client.authorization_policy }}
          {{- if $client.redirect_uris }}
          redirect_uris: {{ toYaml $client.redirect_uris | nindent 10 }}
          {{- end }}
          {{- if $client.audience }}
          audience: {{ toYaml $client.audience | nindent 10 }}
          {{- end }}
          scopes: {{ toYaml (default (list "openid" "profile" "email" "groups") $client.scopes) | nindent 10 }}
          grant_types: {{ toYaml (default (list "refresh_token" "authorization_code") $client.grant_types) | nindent 10 }}
          response_types: {{ toYaml (default (list "code") $client.response_types) | nindent 10 }}
          {{- if hasKey $client "response_modes" }}
          response_modes: {{ toYaml $client.response_modes | nindent 10 }}
          {{- end }}
          userinfo_signing_algorithm: {{ default "none" $client.userinfo_signing_algorithm }}
        {{- end }}
        {{- end }}
    {{- end }}
    {{- if and (not (include "authelia.mount.acl.secret" .)) }}
    {{- tpl (.Files.Get "files/configuration.acl.yaml") . | trim | nindent 4 }}
    {{- end }}
    ...
{{- end }}
