{{- if (include "authelia.enabled.ingress.ingress" .) }}
---
apiVersion: {{ include "capabilities.apiVersion.ingress" . }}
kind: Ingress
metadata:
  name: {{ include "authelia.name" . }}
  labels: {{ include "authelia.labels" (merge (dict "Labels" .Values.ingress.labels) .) | nindent 4 }}
  {{- with $annotations := (include "authelia.ingress.annotations" .) }}
  annotations: {{ $annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
  {{- with $className := .Values.ingress.className }}
  ingressClassName: {{ $className }}
  {{- end }}
  {{- end }}
  rules:
    - host: {{ include "authelia.ingressHost" . }}
      http:
        paths:
          - path: {{ (include "authelia.path" .) }}
            {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
              service:
                name: {{ include "authelia.name" . }}
                port:
                  number: {{ include "authelia.service.port" . }}
            {{- else }}
              serviceName: {{ include "authelia.name" . }}
              servicePort: {{ include "authelia.service.port" . }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ default (include "authelia.ingressHost" .) .Values.ingress.tls.hostNameOverride }}
      secretName: {{ default "authelia-tls" .Values.ingress.tls.secret }}
  {{- end -}}
{{- end -}}
