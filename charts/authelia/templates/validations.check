{{/*
    Validate the Cookies Configurations.
*/}}
{{ if not .Values.configMap.session.cookies }}
{{ fail "The value 'configMap.session.cookies' must have at least one configuration" }}
{{ else }}
{{ range .Values.configMap.session.cookies }}
{{ if or (not .domain) (eq "" .domain) }}
{{ fail "The value 'domain' for the 'configMap.session.cookies' configurations must be configured" }}
{{ end }}
{{ end }}
{{ end }}

{{/*
    Validate the deprecated 'default_redirection_url' is not configured
*/}}
{{ if .Values.configMap.default_redirection_url }}
{{ fail "The value 'configMap.default_redirection_url' is no longer valid" }}
{{ end }}

{{/*
    Validate only one authz endpoint configuration method is configured
*/}}
{{ if and .Values.configMap.server.endpoints.authz .Values.configMap.server.endpoints.automatic_authz_implementations }}
{{ fail "Can't specify both automatic and manual authz endpoints (configMap.server.endpoints.automatic_authz_implementations and configMap.server.endpoints.authz respectively)." }}
{{ end }}

{{/*
    Validate OpenID Connect 1.0 client options.
*/}}
{{ range $client := .Values.configMap.identity_providers.oidc.clients }}

{{/*
    Validate OpenID Connect 1.0 client userinfo_signing_algorithm is NOT defined.
*/}}
{{ if $client.userinfo_signing_algorithm }}
{{ fail "The value 'userinfo_signing_algorithm' for the 'configMap.identity_providers.oidc.clients' is no longer supported." }}
{{ end }}

{{/*
    Validate OpenID Connect 1.0 client secret if defined as a value has a known prefix.
*/}}
{{ $secret := include "authelia.config.oidc.client.secret" $client }}
{{ if and .public $secret }}
{{ fail "The 'configMap.identity_providers.oidc.clients' which have the Public Client Type must not have a secret defined." }}
{{ else if and (not .public) (not $secret) (or (not $client.secret) (not $client.secret.path)) }}
{{ fail "The 'configMap.identity_providers.oidc.clients' which have the Confidential Client Type must have a secret." }}
{{ else if $secret }}
{{ if (not (include "authelia.hashes.prefix.has" $secret)) }}
{{ if eq "client_secret_jwt" $client.token_endpoint_auth_method }}
{{ fail "The value 'secret.value' for the 'configMap.identity_providers.oidc.clients' must have a hash prefix. Please add the '$plaintext$' or '$base64$' prefix to this value." }}
{{ else }}
{{ fail "The value 'secret.value' for the 'configMap.identity_providers.oidc.clients' must have a hash prefix. At this time the '$plaintext$' prefix is still accepted however we recommend taking the opportunity to properly hash it as the plaintext variants will only be accepted in the future for the 'client_secret_jwt' authentication method." }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}

{{/*
    Validate OpenID Connect 1.0 provider option 'issuer_private_key' which have been removed.
*/}}
{{ if .Values.configMap.identity_providers.oidc.issuer_private_key }}
{{ fail "The value 'configMap.identity_providers.oidc.issuer_private_key' is no longer supported and has been replaced with the 'configMap.identity_providers.oidc.issuer_private_keys' multi-value option" }}
{{ end }}

{{/*
    Validate OpenID Connect 1.0 provider option 'issuer_certificate_chain' which have been removed.
*/}}
{{ if .Values.configMap.identity_providers.oidc.issuer_certificate_chain }}
{{ fail "The value 'configMap.identity_providers.oidc.issuer_certificate_chain' is no longer supported and has been replaced with the 'configMap.identity_providers.oidc.issuer_private_keys' multi-value option" }}
{{ end }}