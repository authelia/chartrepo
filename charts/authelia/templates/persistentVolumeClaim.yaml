{{- if include "authelia.generate.persistentVolumeClaim" . }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "authelia.name" . }}
  labels: {{ include "authelia.labels" (merge (dict "Labels" .Values.persistence.labels) .) | nindent 4 }}
  {{- with $annotations := include "authelia.annotations" (merge (dict "Annotations" .Values.persistence.annotations) .) }}
  annotations: {{ $annotations | nindent 4 }}
  {{- end }}
spec:
  accessModes:
  {{- range (.Values.persistence.accessModes | default (list "ReadWriteOnce")) }}
  - {{ . }}
  {{- end }}
  {{- with $storageClass := .Values.persistence.storageClass }}
  storageClassName: {{ $storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ default "100Mi" .Values.persistence.size }}
  {{- if .Values.persistence.selector }}
  selector:
  {{- if .Values.persistence.selector.matchLabels }}
    matchLabels:
  {{- range $key, $value := .Values.persistence.selector.matchLabels }}
      {{ $key}}: {{ $value | squote }}
  {{- end }}
  {{- end }}
  {{- if .Values.persistence.selector.matchExpressions }}
  matchExpressions:
  {{- range $expression := .Values.persistence.selector.matchExpressions }}
  - key: {{ $expression.key }}
    operator: {{ $expression.operator }}
    {{- if $expression.values }}
    values:
    {{- range $expression.values }}
    - {{ . }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if .Values.persistence.volumeName }}
  volumeName: "{{ .Values.persistence.volumeName }}"
  {{- end -}}
  {{- end }}
